import libjevois as jevois
import cv2
import numpy as np

## Simple example of image processing using OpenCV in Python on JeVois
#
# This module is here for you to experiment with Python OpenCV on JeVois.
#
# By default, we get the next video frame from the camera as an OpenCV BGR (color) image named 'inimg'.
# We then apply some image processing to it to create an output BGR image named 'outimg'.
# We finally add some text drawings to outimg and send it to host over USB.
#
# @author Laurent Itti
# 
# @displayname Python Tutorial 2
# @videomapping YUYV 352 288 30.0 YUYV 352 288 30.0 JeVois PythonSandbox
# @email itti\@usc.edu
# @address University of Southern California, HNB-07A, 3641 Watt Way, Los Angeles, CA 90089-2520, USA
# @copyright Copyright (C) 2017 by Laurent Itti, iLab and the University of Southern California
# @mainurl http://jevois.org
# @supporturl http://jevois.org/doc
# @otherurl http://iLab.usc.edu
# @license GPL v3
# @distribution Unrestricted
# @restrictions None
# @ingroup modules
class JFSM:
    # ###################################################################################################
    # ###################################################################################################
    def image_processing (wkimg):
        dst=wkimg
        wkimg=dst
        jevois.writeText(wkimg, "OINK! OINK! OINK!", 200, 120, jevois.YUYV.White, jevois.Font.Font10x20)
        """
        do all that GRIP stuff
        do all that Target stuff
        """
    ## Process function with USB output
    def process(self, inframe, outframe):
        inimg = inframe.getCvBGR()
        outimg = inimg
                
        # Write a title:
        #cv2.putText(outimg, "OINK! OINK! OINK!", (140, 200), cv2.FONT_HERSHEY_SIMPLEX, 1.5, (255,0,0), 3, cv2.LINE_AA)
        outframe.sendCvBGR(outimg)
